COMPILING DOOMSDAY AND THE LIBRARIES
====================================

This document describes the recommended way for building Doomsday and
the libraries on any system.


REQUIREMENTS:
-------------

You will need these tools and libraries for building everything:

- Cmake (http://www.cmake.org/HTML/Download.html
- A C Compiler (GCC on *NIX, OSX. Cygwin, MingGW, Borland or Visual C on Windows)
- GNU Make on *NIX, Cygwin or MinGW
- ncurses
- OpenGL (This can be disabled in cmake for a dedicated build)
- GLU (This can be disabled in cmake for a dedicated build)
- Simple Directmedia Layer (http://www.libsdl.org/)
- SDL_net
- SDL_mixer (This can be disabled in cmake for a dedicated build)
- OpenAL (This can be disabled in cmake for a dedicated build)
- zip (to create Doomsday.pk3)


IF YOU HAVE A SOURCE TARBALL:
-----------------------------

1. Unpack the source tarball, if you haven't already done so.

2. Cd to the Build directory.  Compiling under the Build directory
   will keep the main source directories clean of any object files.
   It also prevents conflicts in the Src/Common/ directory, which is
   used in a slightly different way by each game.

3. Run "cmake ../"  By default, everything will be installed under
   FIXME.  You might want to use e.g. FIXME.

4. If cmake failed due to missing libraries, install the required
   ones.  Make sure you have the development files for each.

5. On *NIX run "make" and then "su -c 'make install'" or
   "sudo 'make install'" depending on you *NIX distribution.
   This will compile everything and install the executable (doomsday),
   the libraries (games, renderer, sound), data files and definitions
   files under the directory specified by the configured prefix.

6. See the main README for tips on running the game.


IF YOU USE SVN:
---------------

1. Check out a copy of the project files from the SourceForge CVS.
   You will only need the "doomsday" module.  You can find
   instructions on how to accomplish this here:

      http://sourceforge.net/svn/?group_id=74815

2. Proceed to compiling as with a source tarball (from step 2).
