# The Doomsday Engine Project -- libdeng2
#
# Copyright (c) 2012-2013 Jaakko Ker√§nen <jaakko.keranen@iki.fi>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

#----------------------------------------------------------------------------
# MAIN CONFIGURATION FOR LIBDENG2
#
# This module is the special Config namespace, reserved for the engine's
# configuration variables and routines. The namespace is stored persistently
# (persist.pack/modules/Config). The script is executed only when it has
# been updated or when __version__ has changed.

# Cleanup: this is a persistent namespace so old stuff may be hanging around.
for name in ['setDefaults', 'updateWithDefaults']
    if name in locals(): del locals()[name]
end
del name

def setDefaults(d = None)
    # Applies the default configuration.
    # - d: Record where to set the values. If not specified, the
    #      Config namespace is used.
    if d == None
        print "Defaults are set in the main Config namespace."
        import Config
        d = Config
    end

    d.importPath = ['', '/modules']

    # Log parameters.
    record d.log

    # Log message levels.
    const d.log.TRACE    = 0
    const d.log.DEBUG    = 1
    const d.log.VERBOSE  = 2
    const d.log.MESSAGE  = 3
    const d.log.INFO     = 4
    const d.log.WARNING  = 5
    const d.log.ERROR    = 6
    const d.log.CRITICAL = 7

    d.log.file       = '/home/doomsday.out'
    d.log.level      = d.log.MESSAGE
    d.log.bufferSize = 1000

    try
        # Get the application's default configuration, if we can.
        import appconfig
        appconfig.setDefaults(d)
    catch: pass
    
    # Game mode related information (one for each game plugin):
    # TODO: plugins should have their own Config scripts (when libdeng2 loads them)
    record d.plugin
    record d.plugin.doom
    record d.plugin.heretic
    record d.plugin.hexen
    record d.plugin.doom64
    
    # Single-shot load hooks.
    d.plugin.doom.onNextLoad    = []
    d.plugin.heretic.onNextLoad = []
    d.plugin.hexen.onNextLoad   = []
    d.plugin.doom64.onNextLoad  = []
end

def updateWithDefaults()
    # Any values not already in Config are copied from defaults.
    record defaults
    setDefaults(defaults)
    import recutil, Config
    recutil.copyMissingMembers(defaults, Config)
end

updateWithDefaults()

# Check the previous version and decide what to do.
if '__oldversion__' in locals()
    # Check for a new build.
    if __version__[3] > __oldversion__[3]
        print 'Detected new build:', __oldversion__[3], '=>', __version__[3]
        
        # Get rid of some old stuff.
        try
            if __version__[3] >= 826: del window.main.normalRect
        catch: pass
    end
    
    # Check for a new release.
    if __version__[0:2] > __oldversion__[0:2]
        print 'Detected new release:', __oldversion__, '=>', __version__
    end

    # The above should be done only once after upgrading.
    del __oldversion__
end
